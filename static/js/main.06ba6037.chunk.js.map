{"version":3,"sources":["components/transition/slide.module.css","components/Notification/Notification.module.css","components/ContactItem/ContactItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","setState","value","handleSubmit","preventDefault","props","onAddContact","this","className","styles","contactForm","onSubmit","htmlFor","label","inputName","type","onChange","inputNumber","formBtn","Component","ContactItem","onDelete","itemBox","onClick","itemBtn","ContactList","contacts","TransitionGroup","component","length","map","item","CSSTransition","key","id","timeout","unmountOnExit","classNames","slideTransition","contactItem","Filter","onChangeFilter","filterTitle","filterInput","Notification","text","Alert","alert","App","filter","showingAlert","deleteContact","prevState","el","changeFilter","addContact","find","contactToAdd","shortid","generate","contactsFromLS","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","contact","toLowerCase","includes","filterContacts","containerApp","in","onEntered","setTimeout","appear","titleApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06ba6037.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2MA8_\",\"enterActive\":\"slide_enterActive__3TQf4\",\"exit\":\"slide_exit__1EeME\",\"exitActive\":\"slide_exitActive__2daqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Notification_alert__316mx\",\"enter\":\"Notification_enter__9zWSt\",\"enterActive\":\"Notification_enterActive__2N4Hd\",\"exit\":\"Notification_exit__15BVq\",\"exitActive\":\"Notification_exitActive__21PC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBox\":\"ContactItem_itemBox__1r47b\",\"itemBtn\":\"ContactItem_itemBtn__rYt-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__10lSj\",\"inputName\":\"ContactForm_inputName__77swX\",\"inputNumber\":\"ContactForm_inputNumber__yKXgh\",\"label\":\"ContactForm_label__3I6u5\",\"formBtn\":\"ContactForm_formBtn__3laBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__5eBFN\",\"contactItem\":\"ContactList_contactItem__84VrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"Filter_filterTitle__GPsut\",\"filterInput\":\"Filter_filterInput__3cuzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"App_containerApp__32MAX\",\"titleApp\":\"App_titleApp__Vh73N\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name } = e.target;\n    this.setState({ [name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (name === '' || number === '') return;\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n          <p>\n            <label htmlFor=\"true\">\n              <span className={styles.label}>Name</span>\n              <input\n                className={styles.inputName}\n                name=\"name\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={name}\n              />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"true\">\n              <span className={styles.label}>Number</span>\n              <input\n                className={styles.inputNumber}\n                name=\"number\"\n                type=\"tel\"\n                onChange={this.handleChange}\n                value={number}\n              />\n            </label>\n          </p>\n          <button type=\"submit\" className={styles.formBtn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDelete }) => (\n  <>\n    <div className={styles.itemBox}>\n      <span>\n        {name}: {number}\n      </span>\n      <button type=\"button\" onClick={onDelete} className={styles.itemBtn}>\n        <span>&times;</span>\n      </button>\n    </div>\n  </>\n);\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport ContactItem from '../ContactItem/ContactItem';\nimport slideTransition from '../transition/slide.module.css';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contacts}>\n      {contacts.length > 0 &&\n        contacts.map(item => (\n          <CSSTransition\n            key={item.id}\n            timeout={250}\n            unmountOnExit\n            classNames={slideTransition}\n          >\n            <li className={styles.contactItem}>\n              <ContactItem\n                name={item.name}\n                number={item.number}\n                onDelete={() => onDelete(item.id)}\n              />\n            </li>\n          </CSSTransition>\n        ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <>\n      <span className={styles.filterTitle}>Find contacts by name</span>\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from './Notification.module.css';\n\nconst Notification = ({ text }) => {\n  return <div className={Alert.alert}>{text}</div>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport shortid from 'shortid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport Notification from '../Notification/Notification';\nimport Alert from '../Notification/Notification.module.css';\nimport slideTransition from '../transition/slide.module.css';\nimport styles from './App.module.css';\nimport '../styles.css';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    text: '',\n    showingAlert: false,\n  };\n\n  componentDidMount() {\n    const contactsFromLS = localStorage.getItem('contacts');\n    if (contactsFromLS) {\n      this.setState({ contacts: JSON.parse(contactsFromLS) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = name => {\n    if (this.state.contacts.find(item => item.name === name.name)) {\n      this.setState({ text: 'Contact already exists!', showingAlert: true });\n      return;\n    }\n\n    const contactToAdd = {\n      ...name,\n      id: shortid.generate(),\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contactToAdd],\n    }));\n  };\n\n  render() {\n    const { contacts, filter, text, showingAlert } = this.state;\n\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.containerApp}>\n        <CSSTransition\n          in={showingAlert}\n          timeout={250}\n          classNames={Alert}\n          onEntered={() =>\n            setTimeout(() => {\n              this.setState({\n                showingAlert: false,\n              });\n            }, 5000)\n          }\n          unmountOnExit\n        >\n          <Notification text={text} />\n        </CSSTransition>\n        <CSSTransition in timeout={500} classNames=\"title\" appear>\n          <h1 className={styles.titleApp}>Phonebook</h1>\n        </CSSTransition>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <CSSTransition\n          in={contacts.length >= 2}\n          timeout={250}\n          unmountOnExit\n          classNames={slideTransition}\n        >\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n        <ContactList\n          contacts={filteredContacts}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}